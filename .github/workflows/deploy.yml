name: Deploy n8n

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Validate workflows
      run: |
        # Add workflow validation logic here
        echo "Validating n8n workflows..."
        # Example: Check if workflow files are valid JSON
        for file in workflows/*.json; do
          if [ -f "$file" ]; then
            echo "Validating $file"
            node -e "JSON.parse(require('fs').readFileSync('$file', 'utf8'))"
          fi
        done

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'staging'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Railway
      uses: bervProject/railway-deploy@v1.0.0
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_SERVICE_ID }}
        
    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.1
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
        
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production' || github.event.inputs.environment == 'production'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Railway (Production)
      uses: bervProject/railway-deploy@v1.0.0
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN_PROD }}
        service: ${{ secrets.RAILWAY_SERVICE_ID_PROD }}
        
    - name: Deploy to Render (Production)
      uses: johnbeynon/render-deploy-action@v0.0.1
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID_PROD }}
        api-key: ${{ secrets.RENDER_API_KEY }}
        
    - name: Deploy to Heroku (Production)
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME_PROD }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        
    - name: Notify deployment
      run: |
        echo "Production deployment completed successfully!"
        # Add notification logic (Slack, Discord, etc.)

  sync-workflows:
    needs: [deploy-staging, deploy-production]
    runs-on: ubuntu-latest
    if: always() && (needs.deploy-staging.result == 'success' || needs.deploy-production.result == 'success')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Sync workflows to production
      run: npm run sync
      env:
        DEPLOYMENT_URL: ${{ secrets.DEPLOYMENT_URL }}
        N8N_API_TOKEN: ${{ secrets.N8N_API_TOKEN }} 