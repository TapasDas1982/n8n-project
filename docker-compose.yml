version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-admin}
      - DB_TYPE=${DB_TYPE:-sqlite}
      - DB_SQLITE_DATABASE=${DB_SQLITE_DATABASE:-./data/n8n.db}
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=${N8N_PORT:-5678}
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your_32_character_encryption_key}
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678}
    volumes:
      - ./data:/home/node/.n8n
      - ./workflows:/home/node/.n8n/workflows
      - ./credentials:/home/node/.n8n/credentials
    networks:
      - n8n-network

  # PostgreSQL for production (uncomment when needed)
  # postgres:
  #   image: postgres:15
  #   container_name: n8n-postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: ${DB_POSTGRESDB_DATABASE:-n8n}
  #     POSTGRES_USER: ${DB_POSTGRESDB_USER:-n8n}
  #     POSTGRES_PASSWORD: ${DB_POSTGRESDB_PASSWORD:-n8n}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - n8n-network

networks:
  n8n-network:
    driver: bridge

volumes:
  postgres_data: 